{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login/login.component.css","webpack:///./src/app/login/login/login.component.html","webpack:///./src/app/login/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AACE;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,qEAAc;KAC1B;CACF,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACfU;AACM;AAEa;AACH;AACJ;AAUrD;IAAA;IAA2B,CAAC;IAAf,WAAW;QARvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qEAAc,CAAC;YAC9B,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,kEAAmB;aACpB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;ACfxB,+DAA+D,mJ;;;;;;;;;;;ACA/D,4dAA4d,+CAA+C,8cAA8c,+CAA+C,uqBAAuqB,cAAc,e;;;;;;;;;;;;;;;;;;;ACA3oD;AACkB;AAC3B;AAOzC;IAKE,wBAAoB,WAAwB,EAAW,MAAe;QAAlD,gBAAW,GAAX,WAAW,CAAa;QAAW,WAAM,GAAN,MAAM,CAAS;QAHtE,cAAS,GAAG,KAAK,CAAC;IAGwD,CAAC;IAE3E,iCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE,CAAC,CAAC;IACP,CAAC;IAED,sBAAI,6BAAC;aAAL,cAAU,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE9C,iCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3B,OAAO;SACV;QACS,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC/F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;aACG;YACF,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;SACvC;IAEf,CAAC;IA7BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yGAAqC;;SAEtC,CAAC;+EAMiC,0DAAW,EAAoB,sDAAM;OAL3D,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { \n    path:'',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n              <h3>Revalsys Technologies</h3>\\n              <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label>User Name</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"userName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.userName.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.userName.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.userName.errors.required\\\">User Name is required</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Password</label>\\n                      <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                          <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                      </div>\\n                  </div>\\n                  \\n                  <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-primary\\\">Submit</button>\\n                  </div>\\n              </form>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"alertMessage\\\">\\n        {{alertMessage}}.\\n     </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  alertMessage: string;\n\n  constructor(private formBuilder: FormBuilder , private router : Router) { }\n\n  ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n          userName: ['', Validators.required],\n          password: ['', [Validators.required, Validators.minLength(4)]],\n      });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n      if (this.registerForm.invalid) {\n          return;\n      }\n                if(this.registerForm.value.userName === 'admin' && this.registerForm.value.password === 'admin') {\n                  console.log(this.registerForm);\n                  this.router.navigate([\"/list\"]);\n                }\n                else{\n                  this.alertMessage = \" Wrong Password\";\n                }\n\n  }\n\n}\n"],"sourceRoot":""}