{"version":3,"sources":["webpack:///./src/app/feedback/feedback-routing.module.ts","webpack:///./src/app/feedback/feedback.module.ts","webpack:///./src/app/feedback/feedback/feedback.component.css","webpack:///./src/app/feedback/feedback/feedback.component.html","webpack:///./src/app/feedback/feedback/feedback.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AACW;AAElE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAG,EAAE;QACT,SAAS,EAAE,8EAAiB;KAC7B;CACF,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACfO;AACM;AAEmB;AACA;AACb;AASrD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAP1B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,8EAAiB,CAAC;YACjC,OAAO,EAAE;gBACP,4DAAY;gBACZ,8EAAqB,EAAE,kEAAmB;aAC3C;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;ACd3B,+DAA+D,+J;;;;;;;;;;;ACA/D,ycAAyc,gDAAgD,4dAA4d,6CAA6C,8bAA8b,4CAA4C,moBAAmoB,cAAc,kB;;;;;;;;;;;;;;;;;;;ACA3kE;AACkB;AAE3B;AAOzC;IAKE,2BAAoB,WAAwB,EAAW,MAAe;QAAlD,gBAAW,GAAX,WAAW,CAAa;QAAW,WAAM,GAAN,MAAM,CAAS;QAHtE,cAAS,GAAG,KAAK,CAAC;IAGwD,CAAC;IAE3E,oCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,MAAM,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SACvD,CAAC,CAAC;IACP,CAAC;IAED,sBAAI,gCAAC;aAAL,cAAU,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE9C,oCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3B,OAAO;SACV;QACD,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,GAAG,6CAA6C,CAAE;QACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEhC,CAAC;IA3BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,qHAAwC;;SAEzC,CAAC;+EAMiC,0DAAW,EAAoB,sDAAM;OAL3D,iBAAiB,CA4B7B;IAAD,wBAAC;CAAA;AA5B6B","file":"feedback-feedback-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FeedbackComponent } from './feedback/feedback.component';\n\nconst routes: Routes = [\n  {\n    path : '',\n    component: FeedbackComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeedbackRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeedbackRoutingModule } from './feedback-routing.module';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [FeedbackComponent],\n  imports: [\n    CommonModule,\n    FeedbackRoutingModule, ReactiveFormsModule\n  ]\n})\nexport class FeedbackModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZlZWRiYWNrL2ZlZWRiYWNrL2ZlZWRiYWNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n              <h3>Feedback</h3>\\n              <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label>Name</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.firstName.errors.required\\\">Name is required</div>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <label>Mobile Number</label>\\n                    <input type=\\\"number\\\"  maxlength=\\\"10\\\" formControlName=\\\"mobile\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.mobile.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.mobile.errors.required\\\">Mobile Number is required</div>\\n                    </div>\\n                </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                      <label>Email</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                          <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-primary\\\">Submit</button>\\n                  </div>\\n              </form>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"alertMessage\\\">\\n         {{alertMessage}}.\\n      </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { validateConfig } from '@angular/router/src/config';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  alertMessage: string;\n\n  constructor(private formBuilder: FormBuilder , private router : Router) { }\n\n  ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n          firstName: ['', Validators.required],\n          mobile: [ '', Validators.required],\n          email: ['', [Validators.required, Validators.email]]\n      });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      if (this.registerForm.invalid) {\n          return;\n      }\n      localStorage.setItem('feedback_form', JSON.stringify(this.registerForm.value));\n      this.alertMessage = \"suceesfully stored the data at localstorage\" ;\n      this.router.navigate([\"/\"]);\n\n  }\n}\n"],"sourceRoot":""}